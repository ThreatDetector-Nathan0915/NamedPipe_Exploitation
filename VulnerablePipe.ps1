# Simulate a vulnerable service running with elevated privileges
$pipeName = "\\.\pipe\VulnerablePipe"

# Create a security descriptor for the named pipe
$pipeSecurity = New-Object System.IO.Pipes.PipeSecurity
$pipeAccessRule = New-Object System.IO.Pipes.PipeAccessRule("Everyone", "FullControl", "Allow")
$pipeSecurity.AddAccessRule($pipeAccessRule)

# Create a named pipe with the security descriptor
$pipe = New-Object System.IO.Pipes.NamedPipeServerStream(
    "VulnerablePipe",
    [System.IO.Pipes.PipeDirection]::InOut,
    1,
    [System.IO.Pipes.PipeTransmissionMode]::Message,
    [System.IO.Pipes.PipeOptions]::None,
    4096,
    4096,
    $pipeSecurity
)

Write-Host "Vulnerable service created named pipe: $pipeName"
$pipe.WaitForConnection()
Write-Host "Client connected to named pipe."

$streamReader = New-Object System.IO.StreamReader($pipe)
while ($true) {
    try {
        $message = $streamReader.ReadLine()
        if ($message -ne $null) {
            Write-Host "Vulnerable service received: $message"
            Invoke-Expression $message
        }
    } catch {
        Write-Host "Error: $_"
        break
    }
    Start-Sleep -Milliseconds 100
}

$streamReader.Close()
$pipe.Close()
Write-Host "Named pipe closed."
